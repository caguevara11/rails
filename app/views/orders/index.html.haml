%div.page.header.d-flex.align-items-center.justify-content-between.px-4.shadow{ :style => "height: 10vh; background-color: #9EC5FE;"  }
  %a.navbar-brand{href: "/"}
    %h2.text-dark.mb-0
      =t('activerecord.modules.dashboard.management')
  %div
    = button_to  t('application.log_out'), logout_path, method: :delete, class: "btn btn-info"
%div.container-fluid{ :style => "height: 90vh" }
  .div.h-100.row.justify-content-start
    .div.col-2.p-0.pt-2.bg-light.h-100.shadow
      %ul.nav.nav-pills.nav-fill.flex-column
        %li.nav-item.mt-2
          = link_to t('activerecord.modules.users.first_upper_others'), users_path, class: 'nav-link rounded-0'
        %li.nav-item.mt-2
          = link_to t('activerecord.modules.dishes.first_upper_others'), dishes_path, class: 'nav-link rounded-0'
        %li.nav-item.mt-2
          = link_to t('activerecord.modules.clients.first_upper_others'), clients_path, class: 'nav-link rounded-0'
        %li.nav-item.mt-2
          = link_to t('activerecord.modules.order_states.first_upper_others'), order_states_path, class: 'nav-link rounded-0'
        %li.nav-item.mt-2
          = link_to t('activerecord.modules.orders.first_upper_others'), orders_path, class: 'nav-link rounded-0 active'
    .div.col-10.p-4

      = form_tag(orders_path, method: :get, class: "navbar-form navbar-right") do
        %div.d-flex.flex-row.mb-4.align-items-center
          %p.m-0{class: "col-auto me-auto"} #{t('application.filter_by_name')}:
          = text_field_tag :search, params[:search], class: "form-control mr-2"
        %div.d-flex.flex-row.mb-4.align-items-center
          %p.m-0{class: "col-auto me-auto"} #{t('application.filter_by_date')}:
          = check_box :date_check, params[:date_check], id: "date_check", name: "date_check", class: "col-auto me-auto"
          %p.m-0{class: "col-auto me-auto"} De
          = text_field_tag :start_date, params[:start_date] ,type: "date",class: "form-control mr-2 ml-2"
          %p.m-0{class: "col-auto me-auto"} A
          = text_field_tag :end_date, params[:end_date], type: "date", class: "form-control mr-2 ml-2"
        %div.d-flex.flex-row.mb-4.align-items-center
          %p.m-0{class: "col-auto me-auto"} #{t('application.filter_by_state')}:
          = check_box :state_check, params[:state_check], id: "state_check", name: "state_check", class: ""
          = select_tag :order_state_id, options_for_select(@order_states, params[:order_state_id]), class: "form-control mr-2 ml-2"
          = submit_tag t('application.search'), name: nil, class: "btn btn-secondary mr-2"

      %p{:style => "color: green"}= notice
      %table.table.table-striped.table-hover.shadow
        %thread
          %tr
            %th= t('activerecord.attributes.order.order_state_title')
            %th= t('activerecord.attributes.order.client')
            %th= t('activerecord.attributes.order.entry_date')
            %th= t('activerecord.attributes.order.subtotal')
            %th= t('activerecord.attributes.order.total')
            %th
            %th

        %tbody
          - @orders.each do |order|
            %tr
              %td{:onclick => "window.location='orders/#{order.id}';"}= "#{t("activerecord.attributes.order_state.names.#{order.order_state.name}")} / #{order.order_state.time_in_minutes} #{t('application.minutes')}"
              %td{:onclick => "window.location='orders/#{order.id}';"}= "#{order.client.firstname} #{order.client.lastname}"
              %td{:onclick => "window.location='orders/#{order.id}';"}= order.created_at.strftime("%d-%b-%Y %l:%M%P")
              %td{:onclick => "window.location='orders/#{order.id}';"}= order.subtotal
              %td{:onclick => "window.location='orders/#{order.id}';"}= order.total
              %td= link_to t('application.edit'), edit_order_path(order), class: "btn btn-success"
              %td= link_to t('application.delete'), "/orders/#{order.id}", 'data-method' => :delete, class: "btn btn-danger", 
              data: {confirm: t('application.want_to_delete', model: t('activerecord.modules.orders.one')), accept: t('application.accept'), reject: t('application.reject')}
